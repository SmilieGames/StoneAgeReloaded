{"version":3,"sources":["components/Utils.js","components/moves/VillageMoves.js","components/StoneAge.js","components/screens/Village.js","components/screens/Technology.js","components/StoneAgeRenderer.js","App.js","serviceWorker.js","index.js"],"names":["getCurrentCitizens","G","currentCitizens","key","VillageMoves","addCitizens","ctx","selectedStation","maxCitizens","village","removeCitizens","StoneAge","Game","setup","resources","food","reseachPoints","culture","production","agrar","foodProductionFactor","mining","productionProductionFactor","religion","religionProductionFactor","factors","foodConsumptionPerCitizen","moves","Object","objectSpread","calculate","i","Tile","props","react_default","a","createElement","Grid_default","item","xs","style","height","children","StatusField","this","removeFunction","station","addFunction","Paper_default","marginTop","marginLeft","marginRight","Typography_default","variant","gutterBottom","label","paddingBottom","Button_default","size","onClick","handleRemove","bind","maxCitizen","handleAdd","React","Component","Village","backgroundColor","container","spacing","Village_Tile","Village_StatusField","zIndex","fromTop","className","toBottom","Tech","Technology","Technology_Tile","Technology_Tech","Views","Buildings","Evolution","StoneAgeRenderer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentView","onEndTurnButtonClicked","assertThisInitialized","renderScreen","events","endTurn","screens_Village","screens_Technology","AppBar_default","position","color","Toolbar_default","TextField_default","id","value","margin","_this2","BottomNavigation_default","showLabels","BottomNavigationAction_default","icon","Home_default","setState","Build_default","Store_default","Autorenew_default","disabled","Send_default","padding","renderTopBar","renderBottomBar","App","Client","game","board","numPlayers","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c52c6e37.chunk.js","sourcesContent":["\n// calculate the current citizens from the current game state\nexport function getCurrentCitizens(G){\n\n  let currentCitizens = 0;\n\n  for(var key in G){\n    if(G[key].currentCitizens != null){\n      currentCitizens += G[key].currentCitizens\n    }\n  }\n\n  return currentCitizens;\n}","const VillageMoves = {   \n  addCitizens(G, ctx, selectedStation){\n    if(G[selectedStation].currentCitizens < G[selectedStation].maxCitizens && G.village.currentCitizens > 0){\n      G[selectedStation].currentCitizens++;\n      G.village.currentCitizens--;\n    }\n  },\n  removeCitizens(G, ctx, selectedStation){\n    if(G[selectedStation].currentCitizens > 0){\n      G[selectedStation].currentCitizens--;\n      G.village.currentCitizens++;\n    }\n  }\n}\n\n\nexport default VillageMoves;\n","import { Game } from 'boardgame.io/core';\n\nimport { getCurrentCitizens } from './Utils'\nimport VillageMoves from './moves/VillageMoves'\n\nconst StoneAge = Game({\n  setup: () => ({\n    maxCitizens: 12,\n\n    resources: {\n        food: 0,\n        // new ressources added but not linked\n        reseachPoints: 0,\n        culture: 0,\n        production: 0\n    },\n\n    agrar: {\n      currentCitizens: 0,\n      maxCitizens: 10,\n      foodProductionFactor: 2.0\n    },\n    // new Object Mining added but not linked\n    mining:{\n      currentCitizens: 0,\n      maxCitizens: 0,\n      productionProductionFactor: 2.0\n    },\n    // new Object religion added but not linked\n    religion:{\n      currentCitizens: 0,\n      maxCitizens: 0,\n      religionProductionFactor: 2.0\n    },\n\n    village: {\n      currentCitizens: 8\n      //tbd productionFactor e.g. military\n    },\n\n    factors: {\n      foodConsumptionPerCitizen: 1.0\n    },\n\n  }),\n  moves: {\n    ...VillageMoves,\n    // wird zu ...VillageMoves\n    \n    calculate(G, ctx){\n\n      // food production\n      G.resources.food = G.resources.food + G.agrar.currentCitizens * G.agrar.foodProductionFactor;\n\n      // food consumption (adjusted for new citizens)\n      for(var key in G){\n        if(G[key].currentCitizens != null){\n          for(let i = 0; i < G[key].currentCitizens; i++){\n            if(G.resources.food >= G.factors.foodConsumptionPerCitizen){\n              G.resources.food = G.resources.food - G.factors.foodConsumptionPerCitizen;\n            }else{\n              G[key].currentCitizens = i;\n              break;\n            }\n          }\n        }\n      }\n      \n      // add people if food is left\n      while(G.resources.food >= 10 && getCurrentCitizens(G) < G.maxCitizens){\n        G.resources.food -= 10;\n        G.village.currentCitizens++;\n      }\n\n      // don't let food build up indefinitely. Otherwise you could hoard food and build houses later on and BOOM massive citizen rate in one turn.\n      if(G.resources.food > 10){\n        G.resources.food = 9;\n      }\n    }\n  }\n})\n\n\nexport default StoneAge;\n","import React from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst Tile = (props) => {\n  return (\n    <Grid item xs={3} style={{ height: '20vh' }}>\n      {props.children}\n    </Grid>\n  )\n}\n\n\nclass StatusField extends React.Component {\n\n  handleRemove(){\n    this.props.removeFunction(this.props.station);\n  }\n\n  handleAdd(){\n    this.props.addFunction(this.props.station);\n  }\n\n  render() {    \n    return (\n      <Paper style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n        <Typography variant=\"h5\" gutterBottom>\n          {this.props.label}\n        </Typography>\n        \n        <Typography variant=\"h6\" gutterBottom style={{paddingBottom: \"5%\"}}>\n          {/** Check if function to remove a citizen exists in this.props. If yes, add button and assign onClick */}\n          {!!this.props.removeFunction && (\n            <Button style={{marginRight: \"4%\"}} variant=\"contained\" size=\"small\" onClick={this.handleRemove.bind(this)}>-</Button>\n          )}\n          {/** Always render the current citizens. Only render the max citizens in applicable */}\n          { this.props.currentCitizens + ((this.props.maxCitizen)? \" / \" + this.props.maxCitizen : \"\") }\n          {/** Check if function to add a citizen exists in this.props. If yes, add button and assign onClick */}\n          {!!this.props.addFunction && (\n            <Button style={{marginLeft: \"4%\"}} variant=\"contained\" size=\"small\" onClick={this.handleAdd.bind(this)}>+</Button>\n          )}\n          \n        </Typography>\n      </Paper>\n    )\n  }\n}\n\nconst Village = (props) => {\n  return (\n    <Grid style={{ backgroundColor: 'lightGray' }} container spacing={0}>\n      <Tile />\n      <Tile>\n        <StatusField \n          label=\"Agrar\" \n          currentCitizens={props.G.agrar.currentCitizens} \n          maxCitizen={props.G.agrar.maxCitizens}\n          removeFunction={props.moves.removeCitizens}\n          addFunction={props.moves.addCitizens}\n          station=\"agrar\"/>\n      </Tile>\n      <Tile />\n      <Tile>\n        <StatusField label=\"Culture\"/>\n      </Tile>\n\n      <Tile />\n      <Tile>\n        <StatusField label=\"Fruits\"/>\n      </Tile>\n      <Tile />\n      <Tile>\n        <StatusField label=\"Stone\"/>\n      </Tile>\n\n      <Tile>\n        <StatusField label=\"Village\" currentCitizens={props.G.village.currentCitizens}/>\n      </Tile>\n      <Tile>\n        <StatusField label=\"Fishing\"/>\n      </Tile>\n      <Tile />\n      <Tile />\n    </Grid>\n  );\n}\n\nexport default Village;","import React from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst Tile = (props) => {\n  return (\n    <Grid item xs={1} style={{ height: '10vh', backgroundColor: 'lightGray', zIndex: '-1' }}>\n      {!!props.fromTop && (\n        <div className=\"fromTop\"/>\n      )}\n      {!!props.toBottom && (\n        <div className=\"toBottom\"/>\n      )}\n      {props.children}\n      \n    </Grid>\n  )\n}\n\nconst Tech= (props) => {\n  return (  \n    <Paper style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n      <Typography variant=\"body\" gutterBottom>\n        {props.label}\n      </Typography>      \n    </Paper>\n  )\n}\n\nconst Technology = (props) => {\n  return (\n    <Grid container spacing={0}>\n      <Tile toBottom><Tech label=\"gathering\"/></Tile>\n      <Tile />\n      <Tile />\n      <Tile />\n      <Tile />\n      <Tile><Tech label=\"crude stone tools\"/></Tile>\n      <Tile />\n      <Tile />\n      <Tile toBottom><Tech label=\"hunting\"/></Tile>\n      <Tile />\n      <Tile />\n      <Tile />\n\n      <Tile fromTop toBottom><Tech label=\"plants\"/></Tile>\n      <Tile />\n      <Tile><Tech label=\"use of fire\"/></Tile>\n      <Tile />\n      <Tile><Tech label=\"fur clothing\"/></Tile>\n      <Tile />\n      <Tile><Tech label=\"improved stone tools\"/></Tile>\n      <Tile><Tech label=\"primitive weapons\"/></Tile>\n      <Tile />\n      <Tile />\n      <Tile />\n      <Tile />\n\n      <Tile fromTop toBottom><Tech label=\"advanced gathering\"/></Tile>\n      <Tile toBottom><Tech label=\"religion\"/></Tile>\n      <Tile />\n      <Tile toBottom><Tech label=\"buidling of fire\"/></Tile>\n      <Tile />\n      <Tile />\n      <Tile />\n      <Tile><Tech label=\"thrown weapons\"/></Tile>\n      <Tile><Tech label=\"trapping\"/></Tile>\n      <Tile><Tech label=\"fishing\"/></Tile>\n      <Tile />\n      <Tile />\n\n      <Tile fromTop toBottom/>\n      <Tile fromTop toBottom><Tech label=\"art\"/></Tile>\n      <Tile />\n      <Tile fromTop toBottom><Tech label=\"shelter\"/></Tile>\n      <Tile />\n      <Tile />\n      <Tile><Tech label=\"advanced stone tools\"/></Tile>\n      <Tile />\n      <Tile><Tech label=\"captive animals\"/></Tile>\n      <Tile />\n      <Tile />\n      <Tile />\n\n      <Tile fromTop toBottom><Tech label=\"agriculture\"/></Tile>\n      <Tile fromTop><Tech label=\"adorment\"/></Tile>\n      <Tile><Tech label=\"pottery\"/></Tile>\n      <Tile fromTop toBottom><Tech label=\"architecture\"/></Tile>\n      <Tile><Tech label=\"cloth outfit\"/></Tile>\n      <Tile />\n      <Tile><Tech label=\"component tools\"/></Tile>\n      <Tile><Tech label=\"ranged weapons\"/></Tile>\n      <Tile><Tech label=\"domestication\"/></Tile>\n      <Tile><Tech label=\"fish hooks\"/></Tile>\n      <Tile />\n      <Tile />\n\n      <Tile />\n      <Tile><Tech label=\"barter\"/></Tile>\n      <Tile />\n      <Tile />\n      <Tile><Tech label=\"PALACE\"/></Tile>\n      <Tile />\n      <Tile />\n      <Tile />\n      <Tile><Tech label=\"animal husbandry\"/></Tile>\n      <Tile><Tech label=\"fishing nets\"/></Tile>\n      <Tile />\n      <Tile />\n      \n    </Grid>\n  );\n}\n\nexport default Technology;","import React, { Component } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport BuildIcon from '@material-ui/icons/Build';\nimport StoreIcon from '@material-ui/icons/Store';\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\nimport SendIcon from '@material-ui/icons/Send'\n\nimport Village from './screens/Village'\nimport Technology from './screens/Technology'\n\nimport {getCurrentCitizens} from './Utils'\n\n// Constants for the currently shown view (the indexes are used by the bottom navigation)\nconst Views = {\n  Village: 0,\n  Technology: 1,\n  Buildings: 2,\n  Evolution: 3\n}\n\nclass StoneAgeRenderer extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentView: Views.Village // set default view\n    }\n\n    this.onEndTurnButtonClicked = this.onEndTurnButtonClicked.bind(this);\n    this.renderScreen = this.renderScreen.bind(this);\n  }\n\n\n  onEndTurnButtonClicked() {\n    this.props.moves.calculate();\n    this.props.events.endTurn();\n  }\n\n  // switch case to choose the selected view and render it.\n  renderScreen() {\n    switch (this.state.currentView) {\n      case Views.Village:\n        return <Village {...this.props} />\n      case Views.Technology:\n        return <Technology {...this.props} />\n      default: \n        return <div/>\n    }\n  }\n\n  renderTopBar() {\n    return (\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <TextField\n            id=\"outlined-name\"\n            label=\"Population / Max Population\"\n            value={ getCurrentCitizens(this.props.G) + \" / \" + this.props.G.maxCitizens}\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </Toolbar>\n      </AppBar>\n    )\n  }\n\n  renderBottomBar(currentView) {\n    return (\n      <BottomNavigation\n        value={currentView}\n        showLabels\n      >\n        <BottomNavigationAction label=\"Village\"     icon={<HomeIcon />}       onClick={() => this.setState({ currentView: Views.Village })} />\n        <BottomNavigationAction label=\"Technology\"  icon={<BuildIcon />}      onClick={() => this.setState({ currentView: Views.Technology })} />\n        <BottomNavigationAction label=\"Buildings\"   icon={<StoreIcon />}      onClick={() => this.setState({ currentView: Views.Buildings })} />\n        <BottomNavigationAction label=\"Evolution\"   icon={<AutorenewIcon />}  onClick={() => this.setState({ currentView: Views.Evolution })} />\n        <BottomNavigationAction disabled />\n        <BottomNavigationAction label=\"End Turn\"    icon={<SendIcon style={{ color: 'green' }} />} onClick={this.onEndTurnButtonClicked} />\n      </BottomNavigation>\n    )\n  }\n\n  render() {\n    const { currentView } = this.state;\n    return (\n      <div className=\"App\" style={{ padding: '2%' }}>\n\n        {this.renderTopBar()}\n\n        <div style={{ height: '60vh' }}>\n          {this.renderScreen()}\n        </div>\n\n        {this.renderBottomBar(currentView)}\n\n\n      </div>\n    );\n  }\n}\n\nexport default StoneAgeRenderer;","import './App.css';\n\nimport { Client } from 'boardgame.io/react';\n\nimport StoneAge from './components/StoneAge'\nimport StoneAgeRenderer from './components/StoneAgeRenderer'\n\nconst App = Client({\n  game: StoneAge,\n  board: StoneAgeRenderer,\n  numPlayers: 1\n})\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}