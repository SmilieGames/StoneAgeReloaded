{"version":3,"sources":["button.jpg","background.png","components/Utils.js","components/gameData/_General.js","components/gameData/Technologies.js","components/gameData/Buildings.js","components/StoneAge.js","components/screens/Village.js","components/Tech.js","components/screens/TechTree.js","components/StoneAgeRenderer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getCurrentCitizens","G","currentCitizens","key","calculateFoodProduction","foodProduction","foodProductionFactor","calculateProductionProduction","prductionProduction","factors","productionPassiveProduction","productionProductionFactor","calculateResearchProduction","researchProduction","researchPassiveProduction","researchProductionFactor","estimatedCitizenGrowth","currentFood","resources","food","foodConsumption","foodConsumptionPerCitizen","totalFood","GeneralMoves","addCitizens","ctx","selectedStation","maxCitizens","village","removeCitizens","technologies","gathering","label","description","active","cost","requirements","enhancement","fruits","plants","advancedGathering","agriculture","agrar","barter","useOfFire","science","research","art","advancedScience","buildingOfFire","shelter","pottery","architecture","crudeStoneTools","mining","furClothing","clothOutfit","improvedStoneTools","advancedStoneTools","componentTools","palace","hunting","primitiveWeapons","thrownWeapons","rangedWeapons","fishing","fishHooks","fishingNets","buildings","dwelling","buildable","workshop","huntingCamp","scienceCenter","storage","palisade","StoneAge","Game","setup","researchPoints","culture","production","moves","Object","objectSpread","VillageMoves","unlockTechnology","tech","calculate","Utils","i","flow","endGameIf","turn","win","Tile","props","react_default","a","createElement","Grid_default","item","xs","style","height","children","StatusField","this","removeFunction","station","addFunction","Paper_default","hidden","visible","marginTop","marginLeft","marginRight","Typography_default","variant","gutterBottom","paddingBottom","Button_default","size","onClick","handleRemove","bind","maxCitizen","handleAdd","React","Component","Village","backgroundColor","width","container","spacing","Village_Tile","Village_StatusField","Tech","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","assertThisInitialized","isClickable","isActive","requirementsMet","enoughResearchPoints","_this$props","_this$props2","_this$props3","met","forEach","req","_this$props4","unlockFunction","_this$props5","Tooltip_default","title","disabled","TechTree","data","TechTree_Tile","Tech_Tech","assign","Views","Technology","Buildings","Evolution","StoneAgeRenderer","state","currentView","onEndTurnButtonClicked","renderScreen","events","endTurn","screens_Village","screens_TechTree","AppBar_default","position","color","Toolbar_default","TextField_default","id","value","margin","paddingRight","_this2","BottomNavigation_default","showLabels","BottomNavigationAction_default","icon","Home_default","setState","Build_default","Store_default","Autorenew_default","Send_default","className","padding","renderTopBar","overflowX","overflowY","renderBottomBar","App","Client","game","board","numPlayers","debug","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.523596ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/button.7377951f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background.1c3c537e.png\";","/**\n * \n * \n * \n * MAKE SURE THAT NO FUNCTIONS IN THIS FILE ALTER THE GAME STATE IN ANY WAY!\n * \n * \n * \n */\n\n\n// calculate the current citizens from the current game state\nexport function getCurrentCitizens(G){\n\n  let currentCitizens = 0;\n\n  for(var key in G){\n    if(G[key].currentCitizens != null){\n      currentCitizens += G[key].currentCitizens\n    }\n  }\n\n  return currentCitizens;\n}\n\n// calculate the food production for this round\nexport function calculateFoodProduction(G){\n  let foodProduction = 0;\n\n  for(var key in G){\n    if(G[key].foodProductionFactor != null){\n      foodProduction += G[key].foodProductionFactor * G[key].currentCitizens;\n    }\n  }\n\n  return foodProduction;\n}\n\n// calculate the food production for this round\nexport function calculateProductionProduction(G){\n  let prductionProduction = G.factors.productionPassiveProduction;\n\n  for(var key in G){\n    if(G[key].productionProductionFactor != null){\n      prductionProduction += G[key].productionProductionFactor * G[key].currentCitizens;\n    }\n  }\n\n  return prductionProduction;\n}\n\n// calculate the food production for this round\nexport function calculateResearchProduction(G){\n  let researchProduction = G.factors.researchPassiveProduction;\n\n  for(var key in G){\n    if(G[key].researchProductionFactor != null){\n      researchProduction += G[key].researchProductionFactor * G[key].currentCitizens;\n    }\n  }\n\n  return researchProduction;\n}\n// calculate, by how much your population will grow or shrink\nexport function estimatedCitizenGrowth(G){\n  const foodProduction = calculateFoodProduction(G);\n  const currentCitizens = getCurrentCitizens(G);\n  const currentFood = G.resources.food;\n\n  // we need to handle the two cases if we have a positive or negative factor, as the factors differ for both cases\n  const foodConsumption = currentCitizens * G.factors.foodConsumptionPerCitizen\n\n  const totalFood = foodProduction + currentFood;\n  const remainingFood = totalFood - foodConsumption;\n\n  if(foodProduction - foodConsumption < 0){\n    if(remainingFood < 0){\n      return totalFood - foodConsumption;\n    }else{\n      return 0;\n    }\n  }else{\n    return \"+\" + (foodProduction - foodConsumption) / 10.0;\n  }\n}","const GeneralMoves = {   \n  addCitizens(G, ctx, selectedStation){\n    if(G[selectedStation].currentCitizens < G[selectedStation].maxCitizens && G.village.currentCitizens > 0){\n      G[selectedStation].currentCitizens++;\n      G.village.currentCitizens--;\n    }\n  },\n  removeCitizens(G, ctx, selectedStation){\n    if(G[selectedStation].currentCitizens > 0){\n      G[selectedStation].currentCitizens--;\n      G.village.currentCitizens++;\n    }\n  }\n}\n\n\nexport default GeneralMoves;\n","\r\n/**\r\n * Define all technologies that can be bought.\r\n * Each technology has an active state, a technology cost and a list of techs that have to be active first.\r\n */\r\n\r\nexport const technologies = {\r\n\r\n  gathering: {\r\n    label: 'Gathering',\r\n    description: 'Unlocks `Fruits`. Each person gathers 2 food per round.',\r\n    active: false,\r\n    cost: 0,\r\n    requirements: [],\r\n    enhancement: (G) => { G.fruits.active = true }\r\n  },\r\n  plants: {\r\n    label: 'Knowledge of Plants',\r\n    description: 'Fruits can hold 10 people more, also +1 food production / citizen',\r\n    active: false,\r\n    cost: 100,\r\n    requirements: ['gathering'],\r\n    enhancement: (G) => { G.fruits.foodProductionFactor += 1; G.fruits.maxCitizens += 10; }\r\n  },\r\n  advancedGathering: {\r\n    label: 'Advanced Gathering',\r\n    description: '`Fruits` can hold 30 people more',\r\n    active: false,\r\n    cost: 500,\r\n    requirements: ['plants'],\r\n    enhancement: (G) => { G.fruits.maxCitizens += 30; }\r\n  },\r\n  agriculture: {\r\n    label: 'Agriculture',\r\n    description: 'Unlocks `Agrar`. 200 Citizen max, +2 food prduction / citizen',\r\n    active: false,\r\n    cost: 1000,\r\n    requirements: ['advancedGathering'],\r\n    enhancement: (G) => { G.agrar.active = true; G.agrar.maxCitizens = 50; }\r\n  },\r\n  barter: {\r\n    label: 'Barter',\r\n    description: 'Passive growth of culture & production +20%',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['agriculture'],\r\n    enhancement: (G) => { /** TODO */ }\r\n  },\r\n\r\n  useOfFire: {\r\n    label: 'Use of Fire',\r\n    description: 'Population +5',\r\n    active: false,\r\n    cost: 100,\r\n    requirements: [],\r\n    enhancement: (G) => { G.maxCitizens += 5 }\r\n  },\r\n  science: {\r\n    label: 'Science',\r\n    description: 'Unlocks `Research`. 10 citizen max, +3 Research points per citizen',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['useOfFire'],\r\n    enhancement: (G) => { G.research.active = true; /** TODO add building unlock */ }\r\n  },\r\n  art: {\r\n    label: 'Art',\r\n    description: 'Research +15 citizen max',\r\n    active: false,\r\n    cost: 500,\r\n    requirements: ['science'],\r\n    enhancement: (G) => { G.research.maxCitizens += 15; }\r\n  },\r\n  advancedScience: {\r\n    label: 'Advanced Science',\r\n    description: 'Research + 50 citizen max',\r\n    active: false,\r\n    cost: 1000,\r\n    requirements: ['art'],\r\n    enhancement: (G) => { G.research.maxCitizens += 50; }\r\n  },\r\n  buildingOfFire: {\r\n    label: 'Building of Fire',\r\n    description: 'Population +20 max',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['useOfFire'],\r\n    enhancement: (G) => { G.maxCitizens += 20; }\r\n  },\r\n  shelter: {\r\n    label: 'Shelter',\r\n    description: 'Population 100 max',\r\n    active: false,\r\n    cost: 500,\r\n    requirements: ['buildingOfFire'],\r\n    enhancement: (G) => { G.maxCitizens = 100; }\r\n  },\r\n  pottery: {\r\n    label: 'Pottery',\r\n    description: 'Population +400 max',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['shelter'],\r\n    enhancement: (G) => { G.maxCitizens += 400; }\r\n  },\r\n  architecture: {\r\n    label: 'Architecture',\r\n    description: 'Population +200 max, unlocks building `megalith`',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['shelter', 'componentTools'],\r\n    enhancement: (G) => { G.maxCitizens += 200; }\r\n  },\r\n\r\n  crudeStoneTools: {\r\n    label: 'Crude Stone Tools',\r\n    description: 'Unlocks mining. 5 citizen max, +3 stone / citizen. Unlocks building `dwelling`',\r\n    active: false,\r\n    cost: 100,\r\n    requirements: [],\r\n    enhancement: (G) => { G.mining.active = true; }\r\n  },\r\n  furClothing: {\r\n    label: 'Fur Clothing',\r\n    description: 'Population +10',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['crudeStoneTools'],\r\n    enhancement: (G) => { G.maxCitizens += 10; }\r\n  },\r\n  clothOutfit: {\r\n    label: 'Cloth Outfit',\r\n    description: 'Population +1000 max',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['furClothing'],\r\n    enhancement: (G) => { G.maxCitizens += 1000; }\r\n  },\r\n  improvedStoneTools: {\r\n    label: 'Improved Stonetools',\r\n    description: 'Mining +10 citizen max, unlocks `workshop`',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['crudeStoneTools'],\r\n    enhancement: (G) => { G.mining.maxCitizens += 10; }\r\n  },\r\n  advancedStoneTools: {\r\n    label: 'Advanced Stonetools',\r\n    description: 'Mining +10 citizen max',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['improvedStoneTools'],\r\n    enhancement: (G) => { G.mining.maxCitizens += 10; }\r\n  },  \r\n  componentTools: {\r\n    label: 'Component Tools',\r\n    description: 'Mining +174 citizen max, unlocks palisades',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['advancedStoneTools'],\r\n    enhancement: (G) => { G.mining.maxCitizens += 174; }\r\n  },\r\n\r\n  palace: {\r\n    label: 'Palace',\r\n    description: 'Unlocks `palace` and possibility to win the game',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['architecture', 'barter'],\r\n    enhancement: (G) => { /** TODO */ }\r\n  },\r\n\r\n  hunting: {\r\n    label: 'Hunting',\r\n    description: 'Unlocks `hunting`. 5 citizen max, 3 food per citizen',\r\n    active: false,\r\n    cost: 100,\r\n    requirements: [],\r\n    enhancement: (G) => { /** TODO */ }\r\n  },\r\n  primitiveWeapons: {\r\n    label: 'Primitive Weapons',\r\n    description: 'Strength +30%',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['hunting'],\r\n    enhancement: (G) => { /** TODO */ }\r\n  },\r\n  thrownWeapons: {\r\n    label: 'Thrown Weapons',\r\n    description: 'Strength +50%',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['primitiveWeapons'],\r\n    enhancement: (G) => { /** TODO */ }\r\n  },\r\n  rangedWeapons: {\r\n    label: 'Ranged Weapons',\r\n    description: 'Strength +100%',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['thrownWeapons'],\r\n    enhancement: (G) => { /** TODO */ }\r\n  },\r\n\r\n  /** I left out the second branch from the right. doen't seem neccessary at the moment */\r\n\r\n  fishing: {\r\n    label: 'Fishing',\r\n    description: 'Unlocks `fishing`. 20 citizen max, 3 food per citizen',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['hunting'],\r\n    enhancement: (G) => { G.fishing.active = true; }\r\n  },\r\n  fishHooks: {\r\n    label: 'Fishing Hooks',\r\n    description: '`fishing`. +40 citizen max, +1 food per citizen',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['fishing'],\r\n    enhancement: (G) => { G.fishing.maxCitizens += 40; G.fishing.foodProductionFactor += 1; }\r\n  },\r\n  fishingNets: {\r\n    label: 'Fishing Nets',\r\n    description: '`fishing` +140 citizen max, +2 food per citizen',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['fishingNets'],\r\n    enhancement: (G) => { G.fishing.maxCitizens += 140; G.fishing.foodProductionFactor +=2; }\r\n  },\r\n  \r\n  \r\n  \r\n}\r\n\r\n\r\nexport const TechMoves = {\r\n  unlockTechnology(G, ctx, tech){\r\n    G.resources.researchPoints -= G.technologies[tech].cost;\r\n    G.technologies[tech].active = true;\r\n    G.technologies[tech].enhancement(G);\r\n  }\r\n};\r\n","\r\nexport const buildings = {\r\n\r\n  dwelling: {\r\n    label: 'Dwelling',\r\n    description: 'population +10 max, +20% growth to passive research and production',\r\n    active: false,\r\n    buildable: false,\r\n    cost: 200,\r\n    enhancement: (G) => { G.maxCitizens += 10;  }\r\n  },\r\n  workshop: {\r\n    label: 'Workshop',\r\n    description: '+1 production production per citizen',\r\n    active: false,\r\n    buildable: false,\r\n    cost: 200,\r\n    enhancement: (G) => {  }\r\n  },\r\n  huntingCamp: {\r\n    label: 'Hunting Camp',\r\n    description: '+10 people hunting, +1 food per citizen on hunting',\r\n    active: false,\r\n    buildable: false,\r\n    cost: 200,\r\n    enhancement: (G) => {  }\r\n  },\r\n  scienceCenter: {\r\n    label: 'Science Center',\r\n    description: '+1 research points per citizen',\r\n    active: false,\r\n    buildable: false,\r\n    cost: 200,\r\n    enhancement: (G) => {  }\r\n  },\r\n  storage: {\r\n    label: 'Storage',\r\n    description: '+20% growth to passive research and production',\r\n    active: false,\r\n    buildable: false,\r\n    cost: 200,\r\n    enhancement: (G) => {  }\r\n  },\r\n  palisade: {\r\n    label: 'Palisade',\r\n    description: 'Strength +200%',\r\n    active: false,\r\n    buildable: false,\r\n    cost: 200,\r\n    enhancement: (G) => {  }\r\n  },\r\n  palace: {\r\n    label: 'Palace',\r\n    description: 'Build this to beat the game',\r\n    active: false,\r\n    buildable: false,\r\n    cost: 200,\r\n    enhancement: (G) => { /** no enhancement as the game is over */ }\r\n  }\r\n}\r\n\r\n\r\nexport const  BuildingMoves = {\r\n}","import { Game } from 'boardgame.io/core';\n\nimport * as Utils from './Utils'\nimport VillageMoves from './gameData/_General'\nimport { TechMoves, technologies } from './gameData/Technologies'\nimport { BuildingMoves, buildings } from './gameData/Buildings'\n\nconst StoneAge = Game({\n  setup: () => ({\n    maxCitizens: 12,\n\n    resources: {\n        food: 0,\n        researchPoints: 0,\n        culture: 0,\n        production: 0\n    },\n\n    fruits: {\n      active: false,\n      currentCitizens: 0,\n      maxCitizens: 12,\n      foodProductionFactor: 2.0\n    },\n    agrar: {\n      active: false,\n      currentCitizens: 0,\n      maxCitizens: 50,\n      foodProductionFactor: 2.0\n    },\n    fishing: {\n      active: false,\n      currentCitizens: 0,\n      maxCitizens: 20,\n      foodProductionFactor: 3.0\n    },\n    mining:{\n      active: false,\n      currentCitizens: 0,\n      maxCitizens: 10,\n      productionProductionFactor: 2.0\n    },\n    research:{\n      active: false,\n      currentCitizens: 0,\n      maxCitizens: 10,\n      researchProductionFactor: 3.0\n    },\n\n    village: {\n      currentCitizens: 8\n      //tbd productionFactor e.g. military\n    },\n\n    technologies,\n    buildings,\n\n    factors: {\n      foodConsumptionPerCitizen: 1.0,\n      researchPassiveProduction: 20,\n      productionPassiveProduction: 2\n    },\n\n  }),\n  moves: {\n    ...VillageMoves,\n    ...TechMoves,\n    ...BuildingMoves,\n    // wird zu ...VillageMoves\n    \n    calculate(G, ctx){\n\n      // food production\n      G.resources.food            += Utils.calculateFoodProduction(G);\n      G.resources.researchPoints  += Utils.calculateResearchProduction(G);\n      G.resources.production      += Utils.calculateProductionProduction(G);\n\n      // food consumption (adjusted for new citizens)\n      for(var key in G){\n        if(G[key].currentCitizens != null){\n          for(let i = 0; i < G[key].currentCitizens; i++){\n            if(G.resources.food >= G.factors.foodConsumptionPerCitizen){\n              G.resources.food = G.resources.food - G.factors.foodConsumptionPerCitizen;\n            }else{\n              G[key].currentCitizens = i;\n              break;\n            }\n          }\n        }\n      }\n      \n      // add people if food is left\n      while(G.resources.food >= 10 && Utils.getCurrentCitizens(G) < G.maxCitizens){\n        G.resources.food -= 10;\n        G.village.currentCitizens++;\n      }\n\n      // don't let food build up indefinitely. Otherwise you could hoard food and build houses later on and BOOM massive citizen rate in one turn.\n      if(G.resources.food > 10){\n        G.resources.food = 9;\n      }\n    }\n  },\n  flow: {\n    endGameIf: (G, ctx) => {\n      if(ctx.turn === 100){\n        if(G.buildings.palace.active === true){\n          return { win: true }\n        }else{\n          return { win: false }\n        }\n      }\n    }\n  }\n})\n\n\nexport default StoneAge;\n","import React from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst Tile = (props) => {\n  return (\n    <Grid item xs={3} style={{ height: '20vh' }}>\n      {props.children}\n    </Grid>\n  )\n}\n\n\nclass StatusField extends React.Component {\n\n  handleRemove(){\n    this.props.removeFunction(this.props.station);\n  }\n\n  handleAdd(){\n    this.props.addFunction(this.props.station);\n  }\n\n  render() {    \n    return (\n      <Paper hidden={!this.props.visible} style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n        <Typography variant=\"h5\" gutterBottom>\n          {this.props.label}\n        </Typography>\n        \n        <Typography variant=\"h6\" gutterBottom style={{paddingBottom: \"5%\"}}>\n          {/** Check if function to remove a citizen exists in this.props. If yes, add button and assign onClick */}\n          {!!this.props.removeFunction && (\n            <Button style={{marginRight: \"4%\"}} variant=\"contained\" size=\"small\" onClick={this.handleRemove.bind(this)}>-</Button>\n          )}\n          {/** Always render the current citizens. Only render the max citizens in applicable */}\n          { this.props.currentCitizens + ((this.props.maxCitizen)? \" / \" + this.props.maxCitizen : \"\") }\n          {/** Check if function to add a citizen exists in this.props. If yes, add button and assign onClick */}\n          {!!this.props.addFunction && (\n            <Button style={{marginLeft: \"4%\"}} variant=\"contained\" size=\"small\" onClick={this.handleAdd.bind(this)}>+</Button>\n          )}\n          \n        </Typography>\n      </Paper>\n    )\n  }\n}\n\nconst Village = (props) => {\n  return (\n    <Grid style={{ backgroundColor: 'lightGray', height: '600px', width: '1900px' }} container spacing={0}>\n      <Tile />\n      <Tile>\n        <StatusField \n          label=\"Agrar\" \n          currentCitizens={props.G.agrar.currentCitizens} \n          maxCitizen={props.G.agrar.maxCitizens}\n          visible={props.G.agrar.active}\n          removeFunction={props.moves.removeCitizens}\n          addFunction={props.moves.addCitizens}\n          station=\"agrar\"/>\n      </Tile>\n      <Tile />\n      <Tile>\n        <StatusField \n          label=\"Research\"\n          currentCitizens={props.G.research.currentCitizens} \n          maxCitizen={props.G.research.maxCitizens}\n          visible={props.G.research.active}\n          removeFunction={props.moves.removeCitizens}\n          addFunction={props.moves.addCitizens}\n          station=\"research\"/>\n      </Tile>\n\n      <Tile />\n      <Tile>\n        <StatusField \n          label=\"Fruits\" \n          currentCitizens={props.G.fruits.currentCitizens} \n          maxCitizen={props.G.fruits.maxCitizens}\n          visible={props.G.fruits.active}\n          removeFunction={props.moves.removeCitizens}\n          addFunction={props.moves.addCitizens}\n          station=\"fruits\"/>\n      </Tile>\n      <Tile />\n      <Tile>\n        <StatusField \n          label=\"Mining\" \n          currentCitizens={props.G.mining.currentCitizens} \n          maxCitizen={props.G.mining.maxCitizens}\n          visible={props.G.mining.active}\n          removeFunction={props.moves.removeCitizens}\n          addFunction={props.moves.addCitizens}\n          station=\"mining\"/>\n      </Tile>\n\n      <Tile>\n        <StatusField\n          label=\"Village\" \n          currentCitizens={props.G.village.currentCitizens}\n          visible={true}\n          station=\"village\"/>\n      </Tile>\n      <Tile>\n        <StatusField \n          label=\"Fishing\"\n          currentCitizens={props.G.fishing.currentCitizens} \n          maxCitizen={props.G.fishing.maxCitizens}\n          visible={props.G.fishing.active}\n          removeFunction={props.moves.removeCitizens}\n          addFunction={props.moves.addCitizens}\n          station=\"fishing\"/>\n      </Tile>\n      <Tile />\n      <Tile />\n    </Grid>\n  );\n}\n\nexport default Village;","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport ButtonBackground from '../button.jpg'\n\n/**\n * Class that holds the logic and view for a technology in the tech tree view.\n * You must support the class with the following props:\n * G -> the Game object\n * technologies -> All available technologies as a hash (should be in the game object)\n * tech -> a string with the name of the technology, as present in the technologies hash\n */\nexport default class Tech extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.unlockTechnology = this.unlockTechnology.bind(this);\n    this.isClickable = this.isClickable.bind(this);\n    this.isActive = this.isActive.bind(this);\n    this.requirementsMet = this.requirementsMet.bind(this);\n    this.enoughResearchPoints = this.enoughResearchPoints.bind(this);\n  }\n\n  /**\n   * returns if this object is clickable.\n   * It is clickable if: the tech is not active, all requriements are active and the user has enough research points\n   */\n  isClickable(){\n    const { technologies, tech } = this.props;\n\n    if(!!technologies[tech]){\n      if(!this.isActive() && this.requirementsMet() && this.enoughResearchPoints()){\n        return true;\n      }else{\n        return false;\n      }\n    }else{\n      return false;\n    }\n  }\n\n  isActive(){\n    const { technologies, tech } = this.props;\n    return technologies[tech].active;\n  }\n\n  requirementsMet(){\n    const { technologies, tech } = this.props;\n\n    let met = true;\n    // cicle all required techs. if any is not active, return false\n    technologies[tech].requirements.forEach((req) => {\n      if(!technologies[req].active){\n        met = false;\n        return false; // this only breaks the anonymous functions in the forEach\n      }\n    })\n    return met;\n  }\n\n  enoughResearchPoints(){\n    const { technologies, tech } = this.props;\n\n    if(this.props.G.resources.researchPoints >= technologies[tech].cost){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  // call the unlock function with the tech name. this also triggers the enhancements that come with this tech.\n  // TODO: right now the only thing blocking the user from activating a tech is the disabled button. should we add a separate check if the reqs are met in the unlock move?\n  unlockTechnology(){\n    const { tech } = this.props;\n\n    this.props.unlockFunction(tech)\n  }\n\n  /**\n   * All we render is a button, surrounded with a tooltip.\n   * TODO: remove the first if clause completly, once all techs have been hooked up to the tech structure\n   */\n  render(){\n    const { technologies, tech } = this.props;\n\n    if(!technologies[tech]){\n      return(\n        <Button variant=\"contained\" style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n            {this.props.tech}\n        </Button>\n      )\n    }\n    return (\n      <Tooltip title={technologies[tech].description}>\n        <div>\n          <Button disabled={!this.isClickable()} onClick={this.unlockTechnology} variant=\"contained\" style={{marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n              {(technologies[tech]? technologies[tech].label : tech)} <br/> {technologies[tech].cost}\n          </Button>\n        </div>\n      </Tooltip>\n    )    \n  }\n}\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Tech from '../Tech';\nimport Background from '../../background.png'\nconst Tile = (props) => {\n  return (\n    <Grid item xs={1} style={{ height: '10vh', backgroundColor: ''}}>\n      {props.children}      \n    </Grid>\n  )\n}\n\n/**\n * The tech tree is a 12x7 Grid of Tiles. Each Tile can contain one tech.\n */\nconst TechTree = (props) => {\n\n  const data = {\n    G: props.G,\n    unlockFunction: props.moves.unlockTechnology,\n    technologies: props.G.technologies\n  }  \n\n  return (\n    <Grid container spacing={0} style={{ backgroundColor: 'lightGray', height: '600px', width: '1900px' }}>\n      <Tile><Tech {...data} tech=\"gathering\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"crudeStoneTools\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"hunting\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n\n      <Tile><Tech {...data} tech=\"plants\"/></Tile>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"useOfFire\"/></Tile>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"furClothing\"/></Tile>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"improvedStoneTools\"/></Tile>\n      <Tile><Tech {...data} tech=\"primitiveWeapons\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n\n      <Tile><Tech {...data} tech=\"advancedGathering\"/></Tile>\n      <Tile><Tech {...data} tech=\"science\"/></Tile>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"buildingOfFire\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"thrownWeapons\"/></Tile>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"fishing\"/></Tile>\n      <Tile/>\n      <Tile/>\n\n      <Tile/>\n      <Tile><Tech {...data} tech=\"art\"/></Tile>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"shelter\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"advancedStoneTools\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n\n      <Tile><Tech {...data} tech=\"agriculture\"/></Tile>\n      <Tile><Tech {...data} tech=\"advancedScience\"/></Tile>\n      <Tile><Tech {...data} tech=\"pottery\"/></Tile>\n      <Tile><Tech {...data} tech=\"architecture\"/></Tile>\n      <Tile><Tech {...data} tech=\"clothOutfit\"/></Tile>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"componentTools\"/></Tile>\n      <Tile><Tech {...data} tech=\"rangedWeapons\"/></Tile>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"fishHooks\"/></Tile>\n      <Tile/>\n      <Tile/>\n\n      <Tile/>\n      <Tile><Tech {...data} tech=\"barter\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"palace\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile><Tech {...data} tech=\"fishingNets\"/></Tile>\n      <Tile/>\n      <Tile/>\n      \n    </Grid>\n  );\n}\n\nexport default TechTree;","import React, { Component } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport BuildIcon from '@material-ui/icons/Build';\nimport StoreIcon from '@material-ui/icons/Store';\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\nimport SendIcon from '@material-ui/icons/Send'\n\nimport Village from './screens/Village'\nimport TechTree from './screens/TechTree'\n\nimport * as Utils from './Utils'\n\n// Constants for the currently shown view (the indexes are used by the bottom navigation)\nconst Views = {\n  Village: 0,\n  Technology: 1,\n  Buildings: 2,\n  Evolution: 3\n}\n\nclass StoneAgeRenderer extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentView: Views.Village // set default view\n    }\n\n    this.onEndTurnButtonClicked = this.onEndTurnButtonClicked.bind(this);\n    this.renderScreen = this.renderScreen.bind(this);\n  }\n\n\n  onEndTurnButtonClicked() {\n    this.props.moves.calculate();\n    this.props.events.endTurn();\n  }\n\n  // switch case to choose the selected view and render it.\n  renderScreen() {\n    switch (this.state.currentView) {\n      case Views.Village:\n        return <Village {...this.props} />\n      case Views.Technology:\n        return <TechTree {...this.props} />\n      default: \n        return <div/>\n    }\n  }\n\n  renderTopBar() {\n    return (\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <TextField\n            id=\"outlined-name\"\n            label=\"Population / Max Population\"\n            value={ Utils.getCurrentCitizens(this.props.G) + \" / \" + this.props.G.maxCitizens + \" ( \" + Utils.estimatedCitizenGrowth(this.props.G) + \")\" }\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{paddingRight: '10px'}}\n          />\n          <TextField\n            id=\"outlined-name\"\n            label=\"Resources\"\n            value={ this.props.G.resources.production + \" ( +\" + Utils.calculateProductionProduction(this.props.G) + \")\" }\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{paddingRight: '10px'}}\n          />\n          <TextField\n            id=\"outlined-name\"\n            label=\"Research Points\"\n            value={ this.props.G.resources.researchPoints + \" ( +\" + Utils.calculateResearchProduction(this.props.G) + \")\" }\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{paddingRight: '10px'}}\n          />\n        </Toolbar>\n      </AppBar>\n    )\n  }\n\n  renderBottomBar(currentView) {\n    return (\n      <BottomNavigation\n        value={currentView}\n        showLabels\n      >\n        <BottomNavigationAction label=\"Village\"     icon={<HomeIcon />}       onClick={() => this.setState({ currentView: Views.Village })} />\n        <BottomNavigationAction label=\"Technology\"  icon={<BuildIcon />}      onClick={() => this.setState({ currentView: Views.Technology })} />\n        <BottomNavigationAction label=\"Buildings\"   icon={<StoreIcon />}      onClick={() => this.setState({ currentView: Views.Buildings })} />\n        <BottomNavigationAction label=\"Evolution\"   icon={<AutorenewIcon />}  onClick={() => this.setState({ currentView: Views.Evolution })} />\n        <BottomNavigationAction label={<TextField\n            id=\"outlined-name\"\n            label=\"Turn\"\n            value={ this.props.ctx.turn + \" / 100\" }\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{margin: '-20px'}}\n          />} />\n        <BottomNavigationAction label=\"End Turn\"    icon={<SendIcon style={{ color: 'green' }} />} onClick={this.onEndTurnButtonClicked} />\n      </BottomNavigation>\n    )\n  }\n\n  render() {\n    const { currentView } = this.state;\n    return (\n      <div className=\"App\" style={{ padding: '2%' }}>\n\n        {this.renderTopBar()}\n\n        <div style={{ height: '65vh', overflowX: 'scroll', overflowY: 'scroll' }}>\n          {this.renderScreen()}\n        </div>\n\n        {this.renderBottomBar(currentView)}\n\n\n      </div>\n    );\n  }\n}\n\nexport default StoneAgeRenderer;","import './App.css';\n\nimport { Client } from 'boardgame.io/react';\n\nimport StoneAge from './components/StoneAge'\nimport StoneAgeRenderer from './components/StoneAgeRenderer'\n\nconst App = Client({\n  game: StoneAge,\n  board: StoneAgeRenderer,\n  numPlayers: 1,\n  debug: false\n})\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}