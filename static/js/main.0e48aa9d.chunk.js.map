{"version":3,"sources":["components/Utils.js","components/moves/VillageMoves.js","components/moves/TechMoves.js","components/StoneAge.js","components/screens/Village.js","components/Tech.js","components/screens/TechTree.js","components/StoneAgeRenderer.js","App.js","serviceWorker.js","index.js"],"names":["getCurrentCitizens","G","currentCitizens","key","VillageMoves","addCitizens","ctx","selectedStation","maxCitizens","village","removeCitizens","technologies","gathering","label","description","active","cost","requirements","enhancement","fruits","plants","foodProductionFactor","advancedGathering","TechMoves","unlockTechnology","tech","console","log","StoneAge","Game","setup","resources","food","researchPoints","culture","production","agrar","mining","productionProductionFactor","religion","religionProductionFactor","factors","foodConsumptionPerCitizen","moves","Object","objectSpread","calculate","foodProduction","Utils","i","Tile","props","react_default","a","createElement","Grid_default","item","xs","style","height","children","StatusField","this","removeFunction","station","addFunction","Paper_default","hidden","visible","marginTop","marginLeft","marginRight","Typography_default","variant","gutterBottom","paddingBottom","Button_default","size","onClick","handleRemove","bind","maxCitizen","handleAdd","React","Component","Village","backgroundColor","width","container","spacing","Village_Tile","Village_StatusField","Tech","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","assertThisInitialized","isClickable","isActive","requirementsMet","enoughResearchPoints","_this$props","_this$props2","_this$props3","met","forEach","req","_this$props4","unlockFunction","_this$props5","Tooltip_default","title","disabled","TechTree","data","TechTree_Tile","Tech_Tech","assign","Views","Technology","Buildings","Evolution","StoneAgeRenderer","state","currentView","onEndTurnButtonClicked","renderScreen","events","endTurn","screens_Village","screens_TechTree","AppBar_default","position","color","Toolbar_default","TextField_default","id","value","margin","_this2","BottomNavigation_default","showLabels","BottomNavigationAction_default","icon","Home_default","setState","Build_default","Store_default","Autorenew_default","Send_default","className","padding","renderTopBar","overflowX","overflowY","renderBottomBar","App","Client","game","board","numPlayers","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uRAEO,SAASA,EAAmBC,GAEjC,IAAIC,EAAkB,EAEtB,IAAI,IAAIC,KAAOF,EACgB,MAA1BA,EAAEE,GAAKD,kBACRA,GAAmBD,EAAEE,GAAKD,iBAI9B,OAAOA,ECZT,IAgBeE,EAhBM,CACnBC,YADmB,SACPJ,EAAGK,EAAKC,GACfN,EAAEM,GAAiBL,gBAAkBD,EAAEM,GAAiBC,aAAeP,EAAEQ,QAAQP,gBAAkB,IACpGD,EAAEM,GAAiBL,kBACnBD,EAAEQ,QAAQP,oBAGdQ,eAPmB,SAOJT,EAAGK,EAAKC,GAClBN,EAAEM,GAAiBL,gBAAkB,IACtCD,EAAEM,GAAiBL,kBACnBD,EAAEQ,QAAQP,qBCJHS,EAAe,CAE1BC,UAAW,CACTC,MAAO,YACPC,YAAa,wDACbC,QAAQ,EACRC,KAAM,EACNC,aAAc,GACdC,YAAa,SAACjB,GAAQA,EAAEkB,OAAOJ,QAAS,IAE1CK,OAAQ,CACNP,MAAO,sBACPC,YAAa,oEACbC,QAAQ,EACRC,KAAM,IACNC,aAAc,CAAC,aACfC,YAAa,SAACjB,GAAQA,EAAEkB,OAAOE,sBAAwB,EAAGpB,EAAEkB,OAAOX,aAAe,KAEpFc,kBAAmB,CACjBT,MAAO,qBACPC,YAAa,GACbC,QAAQ,EACRC,KAAM,IACNC,aAAc,CAAC,UACfC,YAAa,SAACjB,GAAQA,EAAEkB,OAAOE,sBAAwB,KAK9CE,EAAY,CACvBC,iBADuB,SACNvB,EAAGK,EAAKmB,GAAMC,QAAQC,IAAIF,GACzCxB,EAAEU,aAAac,GAAMV,QAAS,EAC9Bd,EAAEU,aAAac,GAAMP,YAAYjB,KC0DtB2B,EA1FEC,eAAK,CACpBC,MAAO,iBAAO,CACZtB,YAAa,GAEbuB,UAAW,CACPC,KAAM,EAENC,eAAgB,IAChBC,QAAS,EACTC,WAAY,GAGhBhB,OAAQ,CACNJ,QAAQ,EACRb,gBAAiB,EACjBM,YAAa,GACba,qBAAsB,GAExBe,MAAO,CACLrB,QAAQ,EACRb,gBAAiB,EACjBM,YAAa,GACba,qBAAsB,GAGxBgB,OAAO,CACLtB,QAAQ,EACRb,gBAAiB,EACjBM,YAAa,EACb8B,2BAA4B,GAG9BC,SAAS,CACPxB,QAAQ,EACRb,gBAAiB,EACjBM,YAAa,EACbgC,yBAA0B,GAG5B/B,QAAS,CACPP,gBAAiB,GAInBS,eAEA8B,QAAS,CACPC,0BAA2B,KAI/BC,MAAMC,OAAAC,EAAA,EAAAD,CAAA,GACDxC,EACAmB,EAFA,CAKHuB,UALG,SAKO7C,EAAGK,GAMX,IAAI,IAAIH,KAHRF,EAAE8B,UAAUC,MHlDX,SAAiC/B,GACtC,IAAI8C,EAAiB,EAErB,IAAI,IAAI5C,KAAOF,EACqB,MAA/BA,EAAEE,GAAKkB,uBACR0B,GAAkB9C,EAAEE,GAAKkB,qBAAuBpB,EAAEE,GAAKD,iBAI3D,OAAO6C,EGyCiBC,CAA8B/C,GAGnCA,EACb,GAA6B,MAA1BA,EAAEE,GAAKD,gBACR,IAAI,IAAI+C,EAAI,EAAGA,EAAIhD,EAAEE,GAAKD,gBAAiB+C,IAAI,CAC7C,KAAGhD,EAAE8B,UAAUC,MAAQ/B,EAAEwC,QAAQC,2BAE5B,CACHzC,EAAEE,GAAKD,gBAAkB+C,EACzB,MAHAhD,EAAE8B,UAAUC,KAAO/B,EAAE8B,UAAUC,KAAO/B,EAAEwC,QAAQC,0BAUxD,KAAMzC,EAAE8B,UAAUC,MAAQ,IAAMgB,EAAyB/C,GAAKA,EAAEO,aAC9DP,EAAE8B,UAAUC,MAAQ,GACpB/B,EAAEQ,QAAQP,kBAITD,EAAE8B,UAAUC,KAAO,KACpB/B,EAAE8B,UAAUC,KAAO,+SClFrBkB,EAAO,SAACC,GACZ,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,MAAO,CAAEC,OAAQ,SAChCR,EAAMS,WAMPC,yLAGFC,KAAKX,MAAMY,eAAeD,KAAKX,MAAMa,6CAIrCF,KAAKX,MAAMc,YAAYH,KAAKX,MAAMa,0CAIlC,OACEZ,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAOc,QAASL,KAAKX,MAAMiB,QAASV,MAAO,CAAEW,UAAW,MAAOC,WAAY,MAAOC,YAAa,QAC7FnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAYoB,QAAQ,KAAKC,cAAY,GAClCZ,KAAKX,MAAMtC,OAGduC,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAYoB,QAAQ,KAAKC,cAAY,EAAChB,MAAO,CAACiB,cAAe,SAExDb,KAAKX,MAAMY,gBACZX,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAQK,MAAO,CAACa,YAAa,MAAOE,QAAQ,YAAYI,KAAK,QAAQC,QAAShB,KAAKiB,aAAaC,KAAKlB,OAArG,KAGAA,KAAKX,MAAMjD,iBAAoB4D,KAAKX,MAAM8B,WAAa,MAAQnB,KAAKX,MAAM8B,WAAa,MAEtFnB,KAAKX,MAAMc,aACZb,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAQK,MAAO,CAACY,WAAY,MAAOG,QAAQ,YAAYI,KAAK,QAAQC,QAAShB,KAAKoB,UAAUF,KAAKlB,OAAjG,cA1BcqB,IAAMC,WAsFjBC,EAnDC,SAAClC,GACf,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMK,MAAO,CAAE4B,gBAAiB,YAAa3B,OAAQ,QAAS4B,MAAO,UAAYC,WAAS,EAACC,QAAS,GAClGrC,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,CACE9E,MAAM,QACNX,gBAAiBiD,EAAMlD,EAAEmC,MAAMlC,gBAC/B+E,WAAY9B,EAAMlD,EAAEmC,MAAM5B,YAC1B4D,QAASjB,EAAMlD,EAAEmC,MAAMrB,OACvBgD,eAAgBZ,EAAMR,MAAMjC,eAC5BuD,YAAad,EAAMR,MAAMtC,YACzB2D,QAAQ,WAEZZ,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,CAAa9E,MAAM,aAGrBuC,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,CACE9E,MAAM,SACNX,gBAAiBiD,EAAMlD,EAAEkB,OAAOjB,gBAChC+E,WAAY9B,EAAMlD,EAAEkB,OAAOX,YAC3B4D,QAASjB,EAAMlD,EAAEkB,OAAOJ,OACxBgD,eAAgBZ,EAAMR,MAAMjC,eAC5BuD,YAAad,EAAMR,MAAMtC,YACzB2D,QAAQ,YAEZZ,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,CAAa9E,MAAM,WAGrBuC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,CACE9E,MAAM,UACNX,gBAAiBiD,EAAMlD,EAAEQ,QAAQP,gBACjCkE,SAAS,EACTJ,QAAQ,aAEZZ,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,CAAa9E,MAAM,aAErBuC,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACoC,EAAD,0BC1FeE,eAEnB,SAAAA,EAAYzC,GAAM,IAAA0C,EAAA,OAAAjD,OAAAkD,EAAA,EAAAlD,CAAAkB,KAAA8B,IAChBC,EAAAjD,OAAAmD,EAAA,EAAAnD,CAAAkB,KAAAlB,OAAAoD,EAAA,EAAApD,CAAAgD,GAAAK,KAAAnC,KAAMX,KAED3B,iBAAmBqE,EAAKrE,iBAAiBwD,KAAtBpC,OAAAsD,EAAA,EAAAtD,QAAAsD,EAAA,EAAAtD,CAAAiD,KACxBA,EAAKM,YAAcN,EAAKM,YAAYnB,KAAjBpC,OAAAsD,EAAA,EAAAtD,QAAAsD,EAAA,EAAAtD,CAAAiD,KACnBA,EAAKO,SAAWP,EAAKO,SAASpB,KAAdpC,OAAAsD,EAAA,EAAAtD,QAAAsD,EAAA,EAAAtD,CAAAiD,KAChBA,EAAKQ,gBAAkBR,EAAKQ,gBAAgBrB,KAArBpC,OAAAsD,EAAA,EAAAtD,QAAAsD,EAAA,EAAAtD,CAAAiD,KACvBA,EAAKS,qBAAuBT,EAAKS,qBAAqBtB,KAA1BpC,OAAAsD,EAAA,EAAAtD,QAAAsD,EAAA,EAAAtD,CAAAiD,KAPZA,6EAUL,IAAAU,EACoBzC,KAAKX,MAEpC,QAHWoD,EACH5F,aADG4F,EACW9E,SAGhBqC,KAAKsC,aAActC,KAAKuC,oBAAqBvC,KAAKwC,2DAUhD,IAAAE,EACuB1C,KAAKX,MACpC,OAFQqD,EACA7F,aADA6F,EACc/E,MACIV,iDAGX,IAAA0F,EACgB3C,KAAKX,MAA5BxC,EADO8F,EACP9F,aAAcc,EADPgF,EACOhF,KAElBiF,GAAM,EAOV,OANA/F,EAAac,GAAMR,aAAa0F,QAAQ,SAACC,GACvC,IAAIjG,EAAaiG,GAAK7F,OAEpB,OADA2F,GAAM,GACC,IAGJA,iDAGa,IAAAG,EACW/C,KAAKX,MAA5BxC,EADYkG,EACZlG,aAAcc,EADFoF,EACEpF,KAEtB,OAAGqC,KAAKX,MAAMlD,EAAE8B,UAAUE,gBAAkBtB,EAAac,GAAMT,gDAO/C,IACRS,EAASqC,KAAKX,MAAd1B,KAERqC,KAAKX,MAAM2D,eAAerF,oCAGpB,IAAAsF,EACyBjD,KAAKX,MAA5BxC,EADFoG,EACEpG,aAAcc,EADhBsF,EACgBtF,KAEtB,OAAId,GAAiBc,GAMpBC,QAAQC,IAAIhB,EAAcc,GAEzB2B,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,CAAS4D,MAAOtG,EAAac,GAAMX,aACjCsC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAQ6D,UAAWpD,KAAKqC,cAAerB,QAAShB,KAAKtC,iBAAkBiD,QAAQ,YAAYf,MAAO,CAAEW,UAAW,MAAOC,WAAY,MAAOC,YAAa,QAChJ5D,EAAac,GAAOd,EAAac,GAAMZ,MAAQY,MATvD2B,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAQoB,QAAQ,YAAYf,MAAO,CAAEW,UAAW,MAAOC,WAAY,MAAOC,YAAa,QAClF9C,UAlEqB0D,IAAMC,WCDlClC,GAAO,SAACC,GACZ,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,MAAO,CAAEC,OAAQ,OAAQ2B,gBAAiB,KACzDnC,EAAMS,WAiGEuD,GA5FE,SAAChE,GAEhB,IAAMiE,EAAO,CACXnH,EAAGkD,EAAMlD,EACT6G,eAAgB3D,EAAMR,MAAMnB,iBAC5Bb,aAAcwC,EAAMlD,EAAEU,cAGxB,OACEyC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMmC,WAAS,EAACC,QAAS,EAAG/B,MAAO,CAAE4B,gBAAiB,YAAa3B,OAAQ,QAAS4B,MAAO,WACzFnC,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD1E,OAAA2E,OAAA,GAAUH,EAAV,CAAgB3F,KAAK,gBAC3B2B,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,uBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,aAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MAEAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD1E,OAAA2E,OAAA,GAAUH,EAAV,CAAgB3F,KAAK,aAC3B2B,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,iBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,kBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,0BAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,uBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MAEAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD1E,OAAA2E,OAAA,GAAUH,EAAV,CAAgB3F,KAAK,wBAC3B2B,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,cAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,sBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,oBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,cAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,aAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MAEAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,SAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,aAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,0BAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,qBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MAEAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,iBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,cAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,aAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,kBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,kBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,qBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,oBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,aAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,gBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MAEAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,YAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,YAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,sBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,KAAMjE,EAAAC,EAAAC,cAACgE,GAAD,CAAMzG,MAAM,kBAClBuC,EAAAC,EAAAC,cAAC+D,GAAD,MACAjE,EAAAC,EAAAC,cAAC+D,GAAD,QC/EAG,GAAQ,CACZnC,QAAS,EACToC,WAAY,EACZC,UAAW,EACXC,UAAW,GAqFEC,eAhFb,SAAAA,EAAYzE,GAAO,IAAA0C,EAAA,OAAAjD,OAAAkD,EAAA,EAAAlD,CAAAkB,KAAA8D,IACjB/B,EAAAjD,OAAAmD,EAAA,EAAAnD,CAAAkB,KAAAlB,OAAAoD,EAAA,EAAApD,CAAAgF,GAAA3B,KAAAnC,KAAMX,KAED0E,MAAQ,CACXC,YAAaN,GAAMnC,SAGrBQ,EAAKkC,uBAAyBlC,EAAKkC,uBAAuB/C,KAA5BpC,OAAAsD,EAAA,EAAAtD,QAAAsD,EAAA,EAAAtD,CAAAiD,KAC9BA,EAAKmC,aAAenC,EAAKmC,aAAahD,KAAlBpC,OAAAsD,EAAA,EAAAtD,QAAAsD,EAAA,EAAAtD,CAAAiD,KARHA,wFAajB/B,KAAKX,MAAMR,MAAMG,YACjBgB,KAAKX,MAAM8E,OAAOC,iDAKlB,OAAQpE,KAAK+D,MAAMC,aACjB,KAAKN,GAAMnC,QACT,OAAOjC,EAAAC,EAAAC,cAAC6E,EAAYrE,KAAKX,OAC3B,KAAKqE,GAAMC,WACT,OAAOrE,EAAAC,EAAAC,cAAC8E,GAAatE,KAAKX,OAC5B,QACE,OAAOC,EAAAC,EAAAC,cAAA,oDAKX,OACEF,EAAAC,EAAAC,cAAC+E,EAAAhF,EAAD,CAAQiF,SAAS,SAASC,MAAM,WAC9BnF,EAAAC,EAAAC,cAACkF,EAAAnF,EAAD,KACED,EAAAC,EAAAC,cAACmF,EAAApF,EAAD,CACEqF,GAAG,gBACH7H,MAAM,8BACN8H,MAAQ3I,EAAmB8D,KAAKX,MAAMlD,GAAK,MAAQ6D,KAAKX,MAAMlD,EAAEO,YAChEoI,OAAO,SACPnE,QAAQ,uDAOFqD,GAAa,IAAAe,EAAA/E,KAC3B,OACEV,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CACEsF,MAAOb,EACPiB,YAAU,GAEV3F,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CAAwBxC,MAAM,UAAcoI,KAAM7F,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,MAAoByB,QAAS,kBAAM+D,EAAKM,SAAS,CAAErB,YAAaN,GAAMnC,aACxHjC,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CAAwBxC,MAAM,aAAcoI,KAAM7F,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAD,MAAoByB,QAAS,kBAAM+D,EAAKM,SAAS,CAAErB,YAAaN,GAAMC,gBACxHrE,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CAAwBxC,MAAM,YAAcoI,KAAM7F,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAD,MAAoByB,QAAS,kBAAM+D,EAAKM,SAAS,CAAErB,YAAaN,GAAME,eACxHtE,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CAAwBxC,MAAM,YAAcoI,KAAM7F,EAAAC,EAAAC,cAACgG,EAAAjG,EAAD,MAAoByB,QAAS,kBAAM+D,EAAKM,SAAS,CAAErB,YAAaN,GAAMG,eACxHvE,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CAAwB6D,UAAQ,IAChC9D,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CAAwBxC,MAAM,WAAcoI,KAAM7F,EAAAC,EAAAC,cAACiG,EAAAlG,EAAD,CAAUK,MAAO,CAAE6E,MAAO,WAAezD,QAAShB,KAAKiE,2DAKtG,IACCD,EAAgBhE,KAAK+D,MAArBC,YACR,OACE1E,EAAAC,EAAAC,cAAA,OAAKkG,UAAU,MAAM9F,MAAO,CAAE+F,QAAS,OAEpC3F,KAAK4F,eAENtG,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEC,OAAQ,OAAQgG,UAAW,SAAUC,UAAW,WAC3D9F,KAAKkE,gBAGPlE,KAAK+F,gBAAgB/B,WA1EC1C,aCfhB0E,GANHC,iBAAO,CACjBC,KAAMpI,EACNqI,MAAOrC,GACPsC,WAAY,ICEMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrH,EAAAC,EAAAC,cAACoH,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0e48aa9d.chunk.js","sourcesContent":["\n// calculate the current citizens from the current game state\nexport function getCurrentCitizens(G){\n\n  let currentCitizens = 0;\n\n  for(var key in G){\n    if(G[key].currentCitizens != null){\n      currentCitizens += G[key].currentCitizens\n    }\n  }\n\n  return currentCitizens;\n}\n\nexport function calculateFoodProduction(G){\n  let foodProduction = 0;\n\n  for(var key in G){\n    if(G[key].foodProductionFactor != null){\n      foodProduction += G[key].foodProductionFactor * G[key].currentCitizens;\n    }\n  }\n\n  return foodProduction;\n}","const VillageMoves = {   \n  addCitizens(G, ctx, selectedStation){\n    if(G[selectedStation].currentCitizens < G[selectedStation].maxCitizens && G.village.currentCitizens > 0){\n      G[selectedStation].currentCitizens++;\n      G.village.currentCitizens--;\n    }\n  },\n  removeCitizens(G, ctx, selectedStation){\n    if(G[selectedStation].currentCitizens > 0){\n      G[selectedStation].currentCitizens--;\n      G.village.currentCitizens++;\n    }\n  }\n}\n\n\nexport default VillageMoves;\n","\r\n/**\r\n * Define all technologies that can be bought.\r\n * Each technology has an active state, a technology cost and a list of techs that have to be active first.\r\n */\r\n\r\nexport const technologies = {\r\n\r\n  gathering: {\r\n    label: 'Gathering',\r\n    description: 'Unlocks fruits. Each person gathers 2 food per round.',\r\n    active: false,\r\n    cost: 0,\r\n    requirements: [],\r\n    enhancement: (G) => { G.fruits.active = true }\r\n  },\r\n  plants: {\r\n    label: 'Knowledge of Plants',\r\n    description: 'Fruits can hold 10 people more, also +1 food production / citizen',\r\n    active: false,\r\n    cost: 100,\r\n    requirements: ['gathering'],\r\n    enhancement: (G) => { G.fruits.foodProductionFactor += 1; G.fruits.maxCitizens += 10; }\r\n  },\r\n  advancedGathering: {\r\n    label: 'Advanced Gathering',\r\n    description: '',\r\n    active: false,\r\n    cost: 200,\r\n    requirements: ['plants'],\r\n    enhancement: (G) => { G.fruits.foodProductionFactor += 2; }\r\n  }  \r\n}\r\n      \r\n\r\nexport const TechMoves = {\r\n  unlockTechnology(G, ctx, tech){console.log(tech)\r\n    G.technologies[tech].active = true;\r\n    G.technologies[tech].enhancement(G);\r\n  }\r\n};\r\n","import { Game } from 'boardgame.io/core';\n\nimport * as Utils from './Utils'\nimport VillageMoves from './moves/VillageMoves'\nimport { TechMoves, technologies } from './moves/TechMoves'\n\nconst StoneAge = Game({\n  setup: () => ({\n    maxCitizens: 12,\n\n    resources: {\n        food: 0,\n        //TODO: new ressources added but not linked\n        researchPoints: 100, // TESTING\n        culture: 0,\n        production: 0\n    },\n\n    fruits: {\n      active: false,\n      currentCitizens: 0,\n      maxCitizens: 12,\n      foodProductionFactor: 2.0\n    },\n    agrar: {\n      active: false,\n      currentCitizens: 0,\n      maxCitizens: 10,\n      foodProductionFactor: 2.0\n    },\n    //TODO: new Object Mining added but not linked\n    mining:{\n      active: false,\n      currentCitizens: 0,\n      maxCitizens: 0,\n      productionProductionFactor: 2.0\n    },\n    //TODO: new Object religion added but not linked\n    religion:{\n      active: false,\n      currentCitizens: 0,\n      maxCitizens: 0,\n      religionProductionFactor: 2.0\n    },\n\n    village: {\n      currentCitizens: 8\n      //tbd productionFactor e.g. military\n    },\n\n    technologies,\n\n    factors: {\n      foodConsumptionPerCitizen: 1.0\n    },\n\n  }),\n  moves: {\n    ...VillageMoves,\n    ...TechMoves,\n    // wird zu ...VillageMoves\n    \n    calculate(G, ctx){\n\n      // food production\n      G.resources.food += Utils.calculateFoodProduction(G);\n\n      // food consumption (adjusted for new citizens)\n      for(var key in G){\n        if(G[key].currentCitizens != null){\n          for(let i = 0; i < G[key].currentCitizens; i++){\n            if(G.resources.food >= G.factors.foodConsumptionPerCitizen){\n              G.resources.food = G.resources.food - G.factors.foodConsumptionPerCitizen;\n            }else{\n              G[key].currentCitizens = i;\n              break;\n            }\n          }\n        }\n      }\n      \n      // add people if food is left\n      while(G.resources.food >= 10 && Utils.getCurrentCitizens(G) < G.maxCitizens){\n        G.resources.food -= 10;\n        G.village.currentCitizens++;\n      }\n\n      // don't let food build up indefinitely. Otherwise you could hoard food and build houses later on and BOOM massive citizen rate in one turn.\n      if(G.resources.food > 10){\n        G.resources.food = 9;\n      }\n    }\n  }\n})\n\n\nexport default StoneAge;\n","import React from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst Tile = (props) => {\n  return (\n    <Grid item xs={3} style={{ height: '20vh' }}>\n      {props.children}\n    </Grid>\n  )\n}\n\n\nclass StatusField extends React.Component {\n\n  handleRemove(){\n    this.props.removeFunction(this.props.station);\n  }\n\n  handleAdd(){\n    this.props.addFunction(this.props.station);\n  }\n\n  render() {    \n    return (\n      <Paper hidden={!this.props.visible} style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n        <Typography variant=\"h5\" gutterBottom>\n          {this.props.label}\n        </Typography>\n        \n        <Typography variant=\"h6\" gutterBottom style={{paddingBottom: \"5%\"}}>\n          {/** Check if function to remove a citizen exists in this.props. If yes, add button and assign onClick */}\n          {!!this.props.removeFunction && (\n            <Button style={{marginRight: \"4%\"}} variant=\"contained\" size=\"small\" onClick={this.handleRemove.bind(this)}>-</Button>\n          )}\n          {/** Always render the current citizens. Only render the max citizens in applicable */}\n          { this.props.currentCitizens + ((this.props.maxCitizen)? \" / \" + this.props.maxCitizen : \"\") }\n          {/** Check if function to add a citizen exists in this.props. If yes, add button and assign onClick */}\n          {!!this.props.addFunction && (\n            <Button style={{marginLeft: \"4%\"}} variant=\"contained\" size=\"small\" onClick={this.handleAdd.bind(this)}>+</Button>\n          )}\n          \n        </Typography>\n      </Paper>\n    )\n  }\n}\n\nconst Village = (props) => {\n  return (\n    <Grid style={{ backgroundColor: 'lightGray', height: '600px', width: '1900px' }} container spacing={0}>\n      <Tile />\n      <Tile>\n        <StatusField \n          label=\"Agrar\" \n          currentCitizens={props.G.agrar.currentCitizens} \n          maxCitizen={props.G.agrar.maxCitizens}\n          visible={props.G.agrar.active}\n          removeFunction={props.moves.removeCitizens}\n          addFunction={props.moves.addCitizens}\n          station=\"agrar\"/>\n      </Tile>\n      <Tile />\n      <Tile>\n        <StatusField label=\"Culture\"/>\n      </Tile>\n\n      <Tile />\n      <Tile>\n        <StatusField \n          label=\"Fruits\" \n          currentCitizens={props.G.fruits.currentCitizens} \n          maxCitizen={props.G.fruits.maxCitizens}\n          visible={props.G.fruits.active}\n          removeFunction={props.moves.removeCitizens}\n          addFunction={props.moves.addCitizens}\n          station=\"fruits\"/>\n      </Tile>\n      <Tile />\n      <Tile>\n        <StatusField label=\"Stone\"/>\n      </Tile>\n\n      <Tile>\n        <StatusField\n          label=\"Village\" \n          currentCitizens={props.G.village.currentCitizens}\n          visible={true}\n          station=\"village\"/>\n      </Tile>\n      <Tile>\n        <StatusField label=\"Fishing\"/>\n      </Tile>\n      <Tile />\n      <Tile />\n    </Grid>\n  );\n}\n\nexport default Village;","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\n\nexport default class Tech extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.unlockTechnology = this.unlockTechnology.bind(this);\n    this.isClickable = this.isClickable.bind(this);\n    this.isActive = this.isActive.bind(this);\n    this.requirementsMet = this.requirementsMet.bind(this);\n    this.enoughResearchPoints = this.enoughResearchPoints.bind(this);\n  }\n\n  isClickable(){\n    const { technologies, tech } = this.props;\n\n    if(!!technologies[tech]){\n      if(!this.isActive() && this.requirementsMet() && this.enoughResearchPoints()){\n        return true;\n      }else{\n        return false;\n      }\n    }else{\n      return false;\n    }\n  }\n\n  isActive(){\n    const { technologies, tech } = this.props;\n    return technologies[tech].active;\n  }\n\n  requirementsMet(){\n    const { technologies, tech } = this.props;\n\n    let met = true;\n    technologies[tech].requirements.forEach((req) => {\n      if(!technologies[req].active){\n        met = false;\n        return false; // this only breaks the anonymous functions in the forEach\n      }\n    })\n    return met;\n  }\n\n  enoughResearchPoints(){\n    const { technologies, tech } = this.props;\n\n    if(this.props.G.resources.researchPoints >= technologies[tech].cost){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  unlockTechnology(){\n    const { tech } = this.props;\n\n    this.props.unlockFunction(tech)\n  }\n\n  render(){\n    const { technologies, tech } = this.props;\n\n    if(!technologies || !tech){\n      return(\n        <Button variant=\"contained\" style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n            {tech}\n        </Button>\n      )\n    }console.log(technologies, tech)\n    return (\n      <Tooltip title={technologies[tech].description}>\n        <span>\n          <Button disabled={!this.isClickable()} onClick={this.unlockTechnology} variant=\"contained\" style={{ marginTop: '10%', marginLeft: '20%', marginRight: '20%' }}>\n              {(technologies[tech]? technologies[tech].label : tech)}\n          </Button>\n        </span>\n      </Tooltip>\n    )    \n  }\n}\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Tech from '../Tech';\n\nconst Tile = (props) => {\n  return (\n    <Grid item xs={1} style={{ height: '10vh', backgroundColor: ''}}>\n      {props.children}      \n    </Grid>\n  )\n}\n\nconst TechTree = (props) => {\n\n  const data = {\n    G: props.G,\n    unlockFunction: props.moves.unlockTechnology,\n    technologies: props.G.technologies\n  }  \n\n  return (\n    <Grid container spacing={0} style={{ backgroundColor: 'lightGray', height: '600px', width: '1900px' }}>\n      <Tile><Tech {...data} tech=\"gathering\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile><Tech label=\"crude stone tools\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile><Tech label=\"hunting\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n\n      <Tile><Tech {...data} tech=\"plants\"/></Tile>\n      <Tile/>\n      <Tile><Tech label=\"use of fire\"/></Tile>\n      <Tile/>\n      <Tile><Tech label=\"fur clothing\"/></Tile>\n      <Tile/>\n      <Tile><Tech label=\"improved stone tools\"/></Tile>\n      <Tile><Tech label=\"primitive weapons\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n\n      <Tile><Tech {...data} tech=\"advancedGathering\"/></Tile>\n      <Tile><Tech label=\"religion\"/></Tile>\n      <Tile/>\n      <Tile><Tech label=\"buidling of fire\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile><Tech label=\"thrown weapons\"/></Tile>\n      <Tile><Tech label=\"trapping\"/></Tile>\n      <Tile><Tech label=\"fishing\"/></Tile>\n      <Tile/>\n      <Tile/>\n\n      <Tile/>\n      <Tile><Tech label=\"art\"/></Tile>\n      <Tile/>\n      <Tile><Tech label=\"shelter\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile><Tech label=\"advanced stone tools\"/></Tile>\n      <Tile/>\n      <Tile><Tech label=\"captive animals\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n\n      <Tile><Tech label=\"agriculture\"/></Tile>\n      <Tile><Tech label=\"adorment\"/></Tile>\n      <Tile><Tech label=\"pottery\"/></Tile>\n      <Tile><Tech label=\"architecture\"/></Tile>\n      <Tile><Tech label=\"cloth outfit\"/></Tile>\n      <Tile/>\n      <Tile><Tech label=\"component tools\"/></Tile>\n      <Tile><Tech label=\"ranged weapons\"/></Tile>\n      <Tile><Tech label=\"domest.\"/></Tile>\n      <Tile><Tech label=\"fish hooks\"/></Tile>\n      <Tile/>\n      <Tile/>\n\n      <Tile/>\n      <Tile><Tech label=\"barter\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile><Tech label=\"PALACE\"/></Tile>\n      <Tile/>\n      <Tile/>\n      <Tile/>\n      <Tile><Tech label=\"animal husbandry\"/></Tile>\n      <Tile><Tech label=\"fishing nets\"/></Tile>\n      <Tile/>\n      <Tile/>\n      \n    </Grid>\n  );\n}\n\nexport default TechTree;","import React, { Component } from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TextField from '@material-ui/core/TextField';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport BuildIcon from '@material-ui/icons/Build';\nimport StoreIcon from '@material-ui/icons/Store';\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\nimport SendIcon from '@material-ui/icons/Send'\n\nimport Village from './screens/Village'\nimport TechTree from './screens/TechTree'\n\nimport {getCurrentCitizens} from './Utils'\n\n// Constants for the currently shown view (the indexes are used by the bottom navigation)\nconst Views = {\n  Village: 0,\n  Technology: 1,\n  Buildings: 2,\n  Evolution: 3\n}\n\nclass StoneAgeRenderer extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentView: Views.Village // set default view\n    }\n\n    this.onEndTurnButtonClicked = this.onEndTurnButtonClicked.bind(this);\n    this.renderScreen = this.renderScreen.bind(this);\n  }\n\n\n  onEndTurnButtonClicked() {\n    this.props.moves.calculate();\n    this.props.events.endTurn();\n  }\n\n  // switch case to choose the selected view and render it.\n  renderScreen() {\n    switch (this.state.currentView) {\n      case Views.Village:\n        return <Village {...this.props} />\n      case Views.Technology:\n        return <TechTree {...this.props} />\n      default: \n        return <div/>\n    }\n  }\n\n  renderTopBar() {\n    return (\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <TextField\n            id=\"outlined-name\"\n            label=\"Population / Max Population\"\n            value={ getCurrentCitizens(this.props.G) + \" / \" + this.props.G.maxCitizens }\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n        </Toolbar>\n      </AppBar>\n    )\n  }\n\n  renderBottomBar(currentView) {\n    return (\n      <BottomNavigation\n        value={currentView}\n        showLabels\n      >\n        <BottomNavigationAction label=\"Village\"     icon={<HomeIcon />}       onClick={() => this.setState({ currentView: Views.Village })} />\n        <BottomNavigationAction label=\"Technology\"  icon={<BuildIcon />}      onClick={() => this.setState({ currentView: Views.Technology })} />\n        <BottomNavigationAction label=\"Buildings\"   icon={<StoreIcon />}      onClick={() => this.setState({ currentView: Views.Buildings })} />\n        <BottomNavigationAction label=\"Evolution\"   icon={<AutorenewIcon />}  onClick={() => this.setState({ currentView: Views.Evolution })} />\n        <BottomNavigationAction disabled />\n        <BottomNavigationAction label=\"End Turn\"    icon={<SendIcon style={{ color: 'green' }} />} onClick={this.onEndTurnButtonClicked} />\n      </BottomNavigation>\n    )\n  }\n\n  render() {\n    const { currentView } = this.state;\n    return (\n      <div className=\"App\" style={{ padding: '2%' }}>\n\n        {this.renderTopBar()}\n\n        <div style={{ height: '60vh', overflowX: 'scroll', overflowY: 'scroll' }}>\n          {this.renderScreen()}\n        </div>\n\n        {this.renderBottomBar(currentView)}\n\n\n      </div>\n    );\n  }\n}\n\nexport default StoneAgeRenderer;","import './App.css';\n\nimport { Client } from 'boardgame.io/react';\n\nimport StoneAge from './components/StoneAge'\nimport StoneAgeRenderer from './components/StoneAgeRenderer'\n\nconst App = Client({\n  game: StoneAge,\n  board: StoneAgeRenderer,\n  numPlayers: 1\n})\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}